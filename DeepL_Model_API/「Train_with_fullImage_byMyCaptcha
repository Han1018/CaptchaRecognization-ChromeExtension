{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"「Train_with_fullImage_byMyCaptcha","provenance":[{"file_id":"11nEZMyQ4or0lVakgF5F0DklucsDQ_Jl-","timestamp":1610635524847}],"collapsed_sections":[],"mount_file_id":"1X7ONj-ikfCNIXSbTlT3X-opr-lpVl6WN","authorship_tag":"ABX9TyPI9GqPWl+mkYh+svOcOo+E"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HqSTbREBjLDD","executionInfo":{"status":"ok","timestamp":1610641257983,"user_tz":-480,"elapsed":3665,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}},"outputId":"b1004d35-786b-4591-d48c-f4aed78b81d5"},"source":["# !pip install captcha\r\n","!pip install pillow"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: pillow in /usr/local/lib/python3.6/dist-packages (7.0.0)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-kH4YuswPfRB","executionInfo":{"status":"ok","timestamp":1610641260767,"user_tz":-480,"elapsed":6438,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}}},"source":["from PIL import Image, ImageDraw, ImageFont\r\n","import string\r\n","import numpy as np\r\n","from keras.models import Sequential\r\n","from matplotlib.pyplot import imshow\r\n","from keras.models import load_model\r\n","from keras.models import Model\r\n","from keras.layers import Input, Dense, Dropout, Flatten, Conv2D, MaxPooling2D\r\n","import tensorflow as tf\r\n","from keras.layers.normalization import BatchNormalization\r\n","from keras.utils  import np_utils\r\n","from keras.callbacks import ModelCheckpoint, EarlyStopping, TensorBoard\r\n","import csv\r\n","import random\r\n","import cv2\r\n","import os\r\n","import glob \r\n","import datetime\r\n","# from captcha.image import ImageCaptcha\r\n","from sklearn.model_selection import train_test_split\r\n","from keras import backend as K"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"iibdBzEug3GD","executionInfo":{"status":"ok","timestamp":1610641260773,"user_tz":-480,"elapsed":6436,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}}},"source":["ALPHABET = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']\r\n","all_set=ALPHABET#+alphabet\r\n","dict_all={}\r\n","label_chr={}\r\n","for i, c in enumerate(all_set):\r\n","  dict_all[c]=i\r\n","CHAR_SET_LEN=len(all_set)\r\n","for i in range(CHAR_SET_LEN):\r\n","  label_chr[i]=all_set[i]\r\n"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"coNTqzS3X6bx","executionInfo":{"status":"ok","timestamp":1610641260774,"user_tz":-480,"elapsed":6431,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}}},"source":["class Captcha(object):\r\n","    # 生成幾位數的驗證碼\r\n","    number = 1\r\n","    # 驗證碼圖片的高度和寬度\r\n","    size = (135, 39)\r\n","    # 驗證碼字體大小\r\n","    fontsize = 32\r\n","    #加入幹擾線條數\r\n","    line_number = 2\r\n","\r\n","    #構建一個驗證碼源文本\r\n","    SOURCE = list(string.ascii_uppercase)\r\n","    # for index in range(0, 10):\r\n","    #     SOURCE.append(str(index))\r\n","\r\n","    #用來繪制幹擾線\r\n","    @classmethod\r\n","    def __gene_line(cls, draw, width, height):\r\n","        begin = (random.randint(width*-1, width), random.randint(height*-1, height))\r\n","        end = (random.randint(int(width/2), width), random.randint(0, height))\r\n","        draw.line([begin, end], fill=cls.__gene_random_color(), width=3)\r\n","\r\n","    # 用來繪制幹擾點\r\n","    @classmethod\r\n","    def __gene_points(cls, draw, point_chance, width, height):\r\n","        chance = min(100, max(0, int(point_chance))) #大小限制在[0, 100]\r\n","        for w in range(width):\r\n","            for h in range(height):\r\n","                tmp = random.randint(0, 100)\r\n","                if tmp > 100 - chance:\r\n","                    draw.point((w, h), fill=cls.__gene_random_color())\r\n","\r\n","    # 生成隨機的顏色\r\n","    @classmethod\r\n","    def __gene_random_color(cls, start=0, end=255):\r\n","        random.seed()\r\n","        return (random.randint(0, 230),random.randint(0, 230), random.randint(0, 230), random.randint(start, end))\r\n","\r\n","    # 生成隨機的文字顏色\r\n","    @classmethod\r\n","    def __gene_random_font_color(cls, start=0, end=255):\r\n","        random.seed()\r\n","        return (random.randint(0, 50),random.randint(0, 50), random.randint(0, 50), random.randint(start, end))\r\n","\r\n","    # 隨機選擇一個字體\r\n","    @classmethod\r\n","    def __gene_random_font(cls):\r\n","        fonts = ['Times-Bold.ttf']\r\n","        font = random.choice(fonts)\r\n","        return '/content/drive/MyDrive/ProJ_Proofnum/font/' + font\r\n","\r\n","    # 用來隨機生成一個字符串\r\n","    @classmethod\r\n","    def gene_text(cls, number):\r\n","        #num是生成驗證碼的位數\r\n","        return ''.join(random.sample(cls.SOURCE, number))\r\n","\r\n","    # 生成驗證碼\r\n","    @classmethod\r\n","    def gene_graph_captcha(cls):\r\n","        #驗證碼圖片的高和寬\r\n","        width, height = cls.size\r\n","\r\n","        #驗證碼的字體\r\n","        font = ImageFont.truetype(cls.__gene_random_font(), cls.fontsize)\r\n","        \r\n","        #創建圖片\r\n","        image = Image.new('RGBA', (width,height),cls.__gene_random_color(50, 80))\r\n","        \r\n","        #創建畫筆\r\n","        draw = ImageDraw.Draw(image)\r\n","        #繪制幹擾線\r\n","        for x in range(0, random.randint(4,6)):\r\n","            cls.__gene_line(draw, width, height)\r\n","        all_text=''\r\n","        #創建字體\r\n","        for i in range(4):\r\n","          #生成字符串\r\n","          text = cls.gene_text(cls.number)\r\n","          all_text+=text\r\n","          #獲取字體尺寸\r\n","          font_width, font_height = font.getsize(text)\r\n","\r\n","          #生成文字透明背板\r\n","          blank = Image.new('RGBA',(font_width,font_height))\r\n","          #生成文字畫部\r\n","          temp = ImageDraw.Draw(blank)\r\n","          #寫字\r\n","          temp.text((0,0),text,font=font,fill=cls.__gene_random_font_color(200, 250))\r\n","          #文字背板旋轉\r\n","          ram_angle=random.randint(-20,20)\r\n","          rotated_txt=blank.rotate(ram_angle, resample=Image.BILINEAR,expand=1)\r\n","          #貼到驗證碼整張背板上\r\n","          ram_width=random.randint(-8,8)\r\n","          ram_height=random.randint(-2,2)\r\n","          image.paste(rotated_txt,(13+i*(2+27)+ram_width, int((height-font_height)/2)+ram_height),rotated_txt)\r\n","          #填充字符串\r\n","          # draw.text(((width - 15font_width) / (4-i), (height - font_height) / 2), text, font=font,\r\n","          #           fill=cls.__gene_random_color(0, 255))\r\n","          # if (font_width<27):\r\n","          #   draw.text((15+i*(5+font_width), (height - font_height) / 2), text, font=font,\r\n","          #             fill=cls.__gene_random_color(0, 255))\r\n","          # else:\r\n","          # draw.text((13+i*(2+27)+ram_width, ((height-font_height)/2)+ram_height), text, font=font,\r\n","          #           fill=cls.__gene_random_color(0, 255))\r\n","          \r\n","        # imshow(np.asarray(blank))\r\n","        #繪制噪點\r\n","        cls.__gene_points(draw, 2, width, height)\r\n","        #RGBA 轉 RGB\r\n","        image = image.convert('RGB')\r\n","        return (all_text, image)"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"xzB8zhNePgzk","executionInfo":{"status":"ok","timestamp":1610641260775,"user_tz":-480,"elapsed":6425,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}}},"source":["def to_onelist(text):\r\n","    label_list = []\r\n","    for c in text:\r\n","        onehot = [0 for _ in range(CHAR_SET_LEN)]\r\n","        onehot[ dict_all[c] ] = 1\r\n","        label_list.append(onehot)\r\n","    return label_list\r\n"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"Z_4QUvIZPlWr","executionInfo":{"status":"ok","timestamp":1610641260776,"user_tz":-480,"elapsed":6420,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}}},"source":["def to_text(l_list):\r\n","    \r\n","    text=[]\r\n","    pos = []\r\n","    for i in range(4):\r\n","        for j in range(19):\r\n","            if(l_list[i][j]):\r\n","                pos.append(j)\r\n","\r\n","    for i in range(4):\r\n","        char_idx = pos[i]\r\n","        text.append(list(dic19.keys())[list(dic19.values()).index(char_idx)])\r\n","        return \"\".join(text)\r\n"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ar7k5lueim8d","executionInfo":{"status":"ok","timestamp":1610641260777,"user_tz":-480,"elapsed":6415,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}}},"source":["def random_captcha_text(char_set=all_set,captcha_size=4):\r\n","    captcha_text=''\r\n","    for i in range(captcha_size):\r\n","        c=random.choice(char_set)\r\n","        captcha_text+=c\r\n","    return captcha_text"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"_2-J4OQjbeKM","executionInfo":{"status":"ok","timestamp":1610641260778,"user_tz":-480,"elapsed":6409,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}}},"source":["def gen_captcha_text_image(captcha_text):\r\n","    image=ImageCaptcha(width=135,height=39)\r\n","#    captcha_text=random_captcha_text()\r\n","    captcha_text=''.join(captcha_text)\r\n","    captcha=image.generate(captcha_text)\r\n","    captcha_image=Image.open(captcha)\r\n","    captcha_image=np.array(captcha_image)\r\n","    return captcha_image"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"id":"-3ZRxYs5bY4g","executionInfo":{"status":"ok","timestamp":1610641260779,"user_tz":-480,"elapsed":6405,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}}},"source":["def generate_dataset():\r\n","    count=30000\r\n","    errtime=0\r\n","    text_list=[]\r\n","    image_list=[]\r\n","    for i in range(count):\r\n","      # text = random_captcha_text()\r\n","      # image=gen_captcha_text_image(text)\r\n","      text, image = Captcha.gene_graph_captcha()\r\n","      #將PIL格式的image轉成CV2的圖片格式\r\n","      image=np.asarray(image)\r\n","      # print(image.shape)\r\n","      image_list.append(image)\r\n","      text_list.append(text)\r\n","      if(i%1000==0 and i!=0):\r\n","        print('Generated : ',i)\r\n","    \r\n","    return image_list,text_list"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"5DuRYcHgd2Ie","executionInfo":{"status":"ok","timestamp":1610641260780,"user_tz":-480,"elapsed":6399,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}}},"source":["def clean_noise(data_list):\r\n","#  src:https://blog.csdn.net/qq_38410428/article/details/93046099\r\n","  for i in range(len(data_list)):\r\n","      #消除造點的參數皆為預設，細節看上面的網址\r\n","      data_list[i]=cv2.fastNlMeansDenoisingColored(data_list[i],None,10,10,7,21)\r\n","  return data_list\r\n"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"c3bVT_dXeUfZ","executionInfo":{"status":"ok","timestamp":1610641260781,"user_tz":-480,"elapsed":6394,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}}},"source":["def black_thresh(data_list):\r\n","    \r\n","    for k in range(len(data_list)):\r\n","        # 將圖片轉灰階\r\n","        gray = cv2.cvtColor(data_list[k], cv2.COLOR_BGR2GRAY)\r\n","        # print(gray.shape)\r\n","        # gray = gray.reshape(39,135,1)\r\n","        # 将图片的边缘变为白色\r\n","        height, width = gray.shape\r\n","        for i in range(width):\r\n","            gray[0, i] = 255\r\n","            gray[height-1, i] = 255\r\n","        for j in range(height):\r\n","            gray[j, 0] = 255\r\n","            gray[j, width-1] = 255\r\n","            \r\n","        # 圖片經thresh成黑白\r\n","        #用 OTSU threshold 自訂義閥值, 所以不用指定\r\n","        ret, thresh1 = cv2.threshold(gray, 0, 255, cv2.THRESH_OTSU)  #方法选择为THRESH_OTSU\r\n","        #185 is threshhold, 255 is highest value\r\n","#        ret,thresh1 = cv2.threshold(gray, 185, 255, cv2.THRESH_BINARY)\r\n","        data_list[k]=thresh1\r\n","        \r\n","    return data_list"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"id":"xD9UxnL9jurY","executionInfo":{"status":"ok","timestamp":1610641260781,"user_tz":-480,"elapsed":6388,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}}},"source":["def clean_noise_black(data_list):\r\n","    # 設置卷積核 \r\n","    kernel1 = np.ones((2, 2), np.uint8)\r\n","    edge_kernel = np.ones((2, 2), np.uint8) \r\n","    edge_list=[]\r\n","    for i in range(len(data_list)):\r\n","#        消除造點的參數皆為預設，細節看上面的網址\r\n","        data_list[i]=cv2.medianBlur(data_list[i], 3)\r\n","#        data_list[i]=cv2.medianBlur(data_list[i], 3)\r\n","#        原文網址：https://kknews.cc/code/63qzkxl.html\r\n","        data_list[i]= cv2.morphologyEx(data_list[i], cv2.MORPH_OPEN, kernel1)\r\n","        data_list[i]= cv2.morphologyEx(data_list[i], cv2.MORPH_CLOSE, kernel1)\r\n","        edge_list.append(cv2.morphologyEx(data_list[i], cv2.MORPH_GRADIENT, edge_kernel))\r\n","    \r\n","    return data_list,edge_list"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"7GQZY0fjdPWZ","executionInfo":{"status":"ok","timestamp":1610641260782,"user_tz":-480,"elapsed":6381,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}}},"source":["def clean_data(image_list):\r\n","\r\n","  blur_list=clean_noise(image_list)\r\n","  print('finished blur')\r\n","  black_x_test=black_thresh(blur_list)\r\n","  print('finished threshold')\r\n","  clean_of_image,edge_of_image= clean_noise_black(black_x_test)\r\n","  print('finished edge detect')\r\n","  clean_of_imagenp=np.array(clean_of_image).reshape(len(image_list),39,135,1)\r\n","  edge_of_image=np.array(edge_of_image).reshape(len(image_list),39,135,1)\r\n","  return clean_of_imagenp,edge_of_image"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"id":"y3CQw6dKfqo1","executionInfo":{"status":"ok","timestamp":1610641260782,"user_tz":-480,"elapsed":6376,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}}},"source":["def encode_text(text_list):\r\n","  read_label=[]\r\n","  for text in text_list:\r\n","    read_label.append(to_onelist(text))\r\n","  train_label = [[] for _ in range(4)]\r\n","  for arr in read_label:\r\n","      for index in range(4):\r\n","          train_label[index].append(arr[index])\r\n","  train_label = [arr for arr in np.asarray(train_label)]\r\n","  return train_label"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"id":"E8mBBqKZPm13","executionInfo":{"status":"ok","timestamp":1610641260783,"user_tz":-480,"elapsed":6371,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}}},"source":["def split_train_data(x_train,y_train):\r\n","    # scaler = StandardScaler()\r\n","    # x_train=scaler.fit_transform(x_train)\r\n","    X_train, X_test, Y_train, Y_test = train_test_split(x_train, y_train, test_size = 0.3)\r\n","    return X_train, X_test, Y_train, Y_test"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"id":"6uvSriUWdBBM","executionInfo":{"status":"ok","timestamp":1610641260784,"user_tz":-480,"elapsed":6365,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}}},"source":[""],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0cxudyQEZbIB","executionInfo":{"status":"ok","timestamp":1610641953144,"user_tz":-480,"elapsed":698719,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}},"outputId":"d75e2580-9e47-4dff-c43b-8443c934e13c"},"source":["def main():\r\n","  #產生dataset\r\n","  image_list,text_list = generate_dataset()\r\n","  # imshow(image_list[2])\r\n","  # print(image_list[0].shape)\r\n","  print('generated')\r\n","  #圖片灰階二質化\r\n","  #已轉換為np array\r\n","  # clean_of_image,edge_of_image=clean_data(image_list)\r\n","  # print('cleaned')\r\n","  print('is',np.array(image_list).shape)\r\n","  image_list=np.array(image_list).reshape(len(image_list),39,135,3)\r\n","  X_train, X_test, Y_train, Y_test=split_train_data(image_list,text_list)\r\n","  #熱編碼輸出\r\n","  Y_train=encode_text(Y_train)\r\n","  Y_test=encode_text(Y_test)\r\n","  print('train_shape : ',X_train.shape)\r\n","  print(Y_test)\r\n","  #creat CNN model\r\n","  print('Creating CNN model...')\r\n","  tensor_in = Input((39, 135, 3))#39*135 的1.2被47, 162,\r\n","  tensor_out = tensor_in\r\n","  tensor_out = Conv2D(filters=32, kernel_size=(3, 3), padding='same', activation='relu')(tensor_out)\r\n","  tensor_out = Conv2D(filters=32, kernel_size=(3, 3), activation='relu')(tensor_out)\r\n","  tensor_out = BatchNormalization(axis=1)(tensor_out)\r\n","  tensor_out = MaxPooling2D(pool_size=(2, 2))(tensor_out)\r\n","  tensor_out = Dropout(0.3)(tensor_out)\r\n","\r\n","  tensor_out = Conv2D(filters=64, kernel_size=(3, 3), padding='same', activation='relu')(tensor_out)\r\n","  tensor_out = Conv2D(filters=64, kernel_size=(3, 3), activation='relu')(tensor_out)\r\n","  tensor_out = BatchNormalization(axis=1)(tensor_out)\r\n","  tensor_out = MaxPooling2D(pool_size=(2, 2))(tensor_out)\r\n","  tensor_out = Dropout(0.3)(tensor_out)\r\n","\r\n","\r\n","  tensor_out = Conv2D(filters=128, kernel_size=(3, 3), padding='same', activation='relu')(tensor_out)\r\n","  tensor_out = Conv2D(filters=128, kernel_size=(3, 3), activation='relu')(tensor_out)\r\n","  tensor_out = BatchNormalization(axis=1)(tensor_out)\r\n","  tensor_out = MaxPooling2D(pool_size=(2, 2))(tensor_out)\r\n","  tensor_out = Dropout(0.3)(tensor_out)\r\n","\r\n","  tensor_out = Conv2D(filters=256, kernel_size=(3, 3), padding='same', activation='relu')(tensor_out)\r\n","  tensor_out = BatchNormalization(axis=1)(tensor_out)\r\n","  tensor_out = MaxPooling2D(pool_size=(2, 2))(tensor_out)\r\n","\r\n","  tensor_out = Flatten()(tensor_out)\r\n","  tensor_out = Dropout(0.3)(tensor_out)\r\n","\r\n","  tensor_out = [Dense(CHAR_SET_LEN, name='digit1', activation='softmax')(tensor_out),\\\r\n","                Dense(CHAR_SET_LEN, name='digit2', activation='softmax')(tensor_out),\\\r\n","                Dense(CHAR_SET_LEN, name='digit3', activation='softmax')(tensor_out),\\\r\n","                Dense(CHAR_SET_LEN, name='digit4', activation='softmax')(tensor_out)]\r\n","\r\n","  model = Model(inputs=tensor_in, outputs=tensor_out)\r\n","  model.compile(loss='categorical_crossentropy', optimizer='Adamax', metrics=['accuracy'])\r\n","  model.summary()\r\n","  batch_size=128\r\n","  filepath=\"/content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\"\r\n","  # checkpoint = ModelCheckpoint(filepath, monitor='val_digit4_accuracy', verbose=1, save_best_only=True,mode='max')\r\n","  # LOG_DIR=os.path.join(\"/content/drive/MyDrive/ProJ_Proofnum/logs\", datetime.datetime.now().strftime(\"%Y%m%d-%H%M%S\"))\r\n","  # tbCallBack = TensorBoard(log_dir=LOG_DIR, \r\n","  #                        histogram_freq=1,\r\n","  #                        write_graph=True,\r\n","  #                        write_grads=True,\r\n","  #                        batch_size=batch_size,\r\n","  #                        write_images=True)\r\n","  # callbacks_list = [checkpoint,tbCallBack]\r\n","  checkpoint = ModelCheckpoint(filepath, monitor='val_digit4_accuracy', verbose=1, save_best_only=True, mode='max')\r\n","  earlystop = EarlyStopping(monitor='val_digit4_accuracy', patience=12, verbose=1, mode='max')\r\n","  tensorBoard = TensorBoard(log_dir = '/content/drive/MyDrive/ProJ_Proofnum/logs',histogram_freq = 1)\r\n","  callbacks_list = [tensorBoard,earlystop, checkpoint]\r\n","\r\n","  model.fit(X_train, Y_train, batch_size=batch_size, epochs=300, verbose=2, validation_data=(X_test, Y_test), callbacks=callbacks_list)  # 模型存檔\r\n","  from keras.models import load_model\r\n","  model.save('/content/drive/MyDrive/ProJ_Proofnum/image_final_ASR.h5')  # creates a HDF5 file 'model.h5'\r\n","main()"],"execution_count":16,"outputs":[{"output_type":"stream","text":["Generated :  1000\n","Generated :  2000\n","Generated :  3000\n","Generated :  4000\n","Generated :  5000\n","Generated :  6000\n","Generated :  7000\n","Generated :  8000\n","Generated :  9000\n","Generated :  10000\n","Generated :  11000\n","Generated :  12000\n","Generated :  13000\n","Generated :  14000\n","Generated :  15000\n","Generated :  16000\n","Generated :  17000\n","Generated :  18000\n","Generated :  19000\n","Generated :  20000\n","Generated :  21000\n","Generated :  22000\n","Generated :  23000\n","Generated :  24000\n","Generated :  25000\n","Generated :  26000\n","Generated :  27000\n","Generated :  28000\n","Generated :  29000\n","generated\n","is (30000, 39, 135, 3)\n","train_shape :  (21000, 39, 135, 3)\n","[array([[0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       ...,\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 1],\n","       [0, 0, 0, ..., 0, 0, 0]]), array([[1, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 1],\n","       [0, 0, 0, ..., 0, 1, 0],\n","       ...,\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 1, 0, ..., 0, 0, 0],\n","       [0, 0, 1, ..., 0, 0, 0]]), array([[0, 0, 1, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 1, 0],\n","       ...,\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0]]), array([[0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 1, 0],\n","       [0, 0, 0, ..., 0, 1, 0],\n","       ...,\n","       [0, 0, 1, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 0, 0, 0],\n","       [0, 0, 0, ..., 1, 0, 0]])]\n","Creating CNN model...\n","Model: \"model\"\n","__________________________________________________________________________________________________\n","Layer (type)                    Output Shape         Param #     Connected to                     \n","==================================================================================================\n","input_1 (InputLayer)            [(None, 39, 135, 3)] 0                                            \n","__________________________________________________________________________________________________\n","conv2d (Conv2D)                 (None, 39, 135, 32)  896         input_1[0][0]                    \n","__________________________________________________________________________________________________\n","conv2d_1 (Conv2D)               (None, 37, 133, 32)  9248        conv2d[0][0]                     \n","__________________________________________________________________________________________________\n","batch_normalization (BatchNorma (None, 37, 133, 32)  148         conv2d_1[0][0]                   \n","__________________________________________________________________________________________________\n","max_pooling2d (MaxPooling2D)    (None, 18, 66, 32)   0           batch_normalization[0][0]        \n","__________________________________________________________________________________________________\n","dropout (Dropout)               (None, 18, 66, 32)   0           max_pooling2d[0][0]              \n","__________________________________________________________________________________________________\n","conv2d_2 (Conv2D)               (None, 18, 66, 64)   18496       dropout[0][0]                    \n","__________________________________________________________________________________________________\n","conv2d_3 (Conv2D)               (None, 16, 64, 64)   36928       conv2d_2[0][0]                   \n","__________________________________________________________________________________________________\n","batch_normalization_1 (BatchNor (None, 16, 64, 64)   64          conv2d_3[0][0]                   \n","__________________________________________________________________________________________________\n","max_pooling2d_1 (MaxPooling2D)  (None, 8, 32, 64)    0           batch_normalization_1[0][0]      \n","__________________________________________________________________________________________________\n","dropout_1 (Dropout)             (None, 8, 32, 64)    0           max_pooling2d_1[0][0]            \n","__________________________________________________________________________________________________\n","conv2d_4 (Conv2D)               (None, 8, 32, 128)   73856       dropout_1[0][0]                  \n","__________________________________________________________________________________________________\n","conv2d_5 (Conv2D)               (None, 6, 30, 128)   147584      conv2d_4[0][0]                   \n","__________________________________________________________________________________________________\n","batch_normalization_2 (BatchNor (None, 6, 30, 128)   24          conv2d_5[0][0]                   \n","__________________________________________________________________________________________________\n","max_pooling2d_2 (MaxPooling2D)  (None, 3, 15, 128)   0           batch_normalization_2[0][0]      \n","__________________________________________________________________________________________________\n","dropout_2 (Dropout)             (None, 3, 15, 128)   0           max_pooling2d_2[0][0]            \n","__________________________________________________________________________________________________\n","conv2d_6 (Conv2D)               (None, 3, 15, 256)   295168      dropout_2[0][0]                  \n","__________________________________________________________________________________________________\n","batch_normalization_3 (BatchNor (None, 3, 15, 256)   12          conv2d_6[0][0]                   \n","__________________________________________________________________________________________________\n","max_pooling2d_3 (MaxPooling2D)  (None, 1, 7, 256)    0           batch_normalization_3[0][0]      \n","__________________________________________________________________________________________________\n","flatten (Flatten)               (None, 1792)         0           max_pooling2d_3[0][0]            \n","__________________________________________________________________________________________________\n","dropout_3 (Dropout)             (None, 1792)         0           flatten[0][0]                    \n","__________________________________________________________________________________________________\n","digit1 (Dense)                  (None, 26)           46618       dropout_3[0][0]                  \n","__________________________________________________________________________________________________\n","digit2 (Dense)                  (None, 26)           46618       dropout_3[0][0]                  \n","__________________________________________________________________________________________________\n","digit3 (Dense)                  (None, 26)           46618       dropout_3[0][0]                  \n","__________________________________________________________________________________________________\n","digit4 (Dense)                  (None, 26)           46618       dropout_3[0][0]                  \n","==================================================================================================\n","Total params: 768,896\n","Trainable params: 768,772\n","Non-trainable params: 124\n","__________________________________________________________________________________________________\n","Epoch 1/300\n","165/165 - 16s - loss: 15.1051 - digit1_loss: 3.7910 - digit2_loss: 3.7620 - digit3_loss: 3.7605 - digit4_loss: 3.7916 - digit1_accuracy: 0.0391 - digit2_accuracy: 0.0384 - digit3_accuracy: 0.0399 - digit4_accuracy: 0.0381 - val_loss: 13.1896 - val_digit1_loss: 3.2928 - val_digit2_loss: 3.2882 - val_digit3_loss: 3.3015 - val_digit4_loss: 3.3071 - val_digit1_accuracy: 0.0448 - val_digit2_accuracy: 0.0328 - val_digit3_accuracy: 0.0387 - val_digit4_accuracy: 0.0350\n","\n","Epoch 00001: val_digit4_accuracy improved from -inf to 0.03500, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 2/300\n","165/165 - 7s - loss: 14.1596 - digit1_loss: 3.5416 - digit2_loss: 3.5306 - digit3_loss: 3.5313 - digit4_loss: 3.5561 - digit1_accuracy: 0.0391 - digit2_accuracy: 0.0397 - digit3_accuracy: 0.0407 - digit4_accuracy: 0.0378 - val_loss: 13.0571 - val_digit1_loss: 3.2633 - val_digit2_loss: 3.2708 - val_digit3_loss: 3.2527 - val_digit4_loss: 3.2703 - val_digit1_accuracy: 0.0461 - val_digit2_accuracy: 0.0393 - val_digit3_accuracy: 0.0410 - val_digit4_accuracy: 0.0344\n","\n","Epoch 00002: val_digit4_accuracy did not improve from 0.03500\n","Epoch 3/300\n","165/165 - 7s - loss: 13.6122 - digit1_loss: 3.3982 - digit2_loss: 3.4022 - digit3_loss: 3.4012 - digit4_loss: 3.4106 - digit1_accuracy: 0.0410 - digit2_accuracy: 0.0404 - digit3_accuracy: 0.0404 - digit4_accuracy: 0.0408 - val_loss: 13.0298 - val_digit1_loss: 3.2557 - val_digit2_loss: 3.2630 - val_digit3_loss: 3.2550 - val_digit4_loss: 3.2561 - val_digit1_accuracy: 0.0472 - val_digit2_accuracy: 0.0407 - val_digit3_accuracy: 0.0411 - val_digit4_accuracy: 0.0430\n","\n","Epoch 00003: val_digit4_accuracy improved from 0.03500 to 0.04300, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 4/300\n","165/165 - 7s - loss: 13.1643 - digit1_loss: 3.2879 - digit2_loss: 3.2939 - digit3_loss: 3.2871 - digit4_loss: 3.2953 - digit1_accuracy: 0.0523 - digit2_accuracy: 0.0500 - digit3_accuracy: 0.0527 - digit4_accuracy: 0.0497 - val_loss: 12.9305 - val_digit1_loss: 3.2253 - val_digit2_loss: 3.2403 - val_digit3_loss: 3.2361 - val_digit4_loss: 3.2288 - val_digit1_accuracy: 0.0522 - val_digit2_accuracy: 0.0480 - val_digit3_accuracy: 0.0498 - val_digit4_accuracy: 0.0587\n","\n","Epoch 00004: val_digit4_accuracy improved from 0.04300 to 0.05867, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 5/300\n","165/165 - 7s - loss: 12.3572 - digit1_loss: 3.0639 - digit2_loss: 3.0871 - digit3_loss: 3.0930 - digit4_loss: 3.1132 - digit1_accuracy: 0.0955 - digit2_accuracy: 0.0897 - digit3_accuracy: 0.0901 - digit4_accuracy: 0.0848 - val_loss: 12.3703 - val_digit1_loss: 3.0998 - val_digit2_loss: 3.1048 - val_digit3_loss: 3.1155 - val_digit4_loss: 3.0502 - val_digit1_accuracy: 0.0843 - val_digit2_accuracy: 0.0824 - val_digit3_accuracy: 0.0711 - val_digit4_accuracy: 0.1028\n","\n","Epoch 00005: val_digit4_accuracy improved from 0.05867 to 0.10278, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 6/300\n","165/165 - 7s - loss: 10.1517 - digit1_loss: 2.4156 - digit2_loss: 2.5446 - digit3_loss: 2.5931 - digit4_loss: 2.5983 - digit1_accuracy: 0.2442 - digit2_accuracy: 0.2088 - digit3_accuracy: 0.2067 - digit4_accuracy: 0.2007 - val_loss: 11.3741 - val_digit1_loss: 2.8566 - val_digit2_loss: 2.9048 - val_digit3_loss: 2.8695 - val_digit4_loss: 2.7432 - val_digit1_accuracy: 0.1427 - val_digit2_accuracy: 0.1433 - val_digit3_accuracy: 0.1449 - val_digit4_accuracy: 0.1764\n","\n","Epoch 00006: val_digit4_accuracy improved from 0.10278 to 0.17644, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 7/300\n","165/165 - 7s - loss: 6.2417 - digit1_loss: 1.3414 - digit2_loss: 1.5963 - digit3_loss: 1.6690 - digit4_loss: 1.6350 - digit1_accuracy: 0.5505 - digit2_accuracy: 0.4743 - digit3_accuracy: 0.4626 - digit4_accuracy: 0.4638 - val_loss: 5.2631 - val_digit1_loss: 1.1610 - val_digit2_loss: 1.3827 - val_digit3_loss: 1.4342 - val_digit4_loss: 1.2851 - val_digit1_accuracy: 0.6588 - val_digit2_accuracy: 0.5762 - val_digit3_accuracy: 0.5916 - val_digit4_accuracy: 0.6421\n","\n","Epoch 00007: val_digit4_accuracy improved from 0.17644 to 0.64211, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 8/300\n","165/165 - 7s - loss: 3.2565 - digit1_loss: 0.6464 - digit2_loss: 0.8428 - digit3_loss: 0.9226 - digit4_loss: 0.8448 - digit1_accuracy: 0.7818 - digit2_accuracy: 0.7187 - digit3_accuracy: 0.7011 - digit4_accuracy: 0.7195 - val_loss: 1.6809 - val_digit1_loss: 0.3184 - val_digit2_loss: 0.4525 - val_digit3_loss: 0.5155 - val_digit4_loss: 0.3945 - val_digit1_accuracy: 0.9109 - val_digit2_accuracy: 0.8780 - val_digit3_accuracy: 0.8533 - val_digit4_accuracy: 0.8943\n","\n","Epoch 00008: val_digit4_accuracy improved from 0.64211 to 0.89433, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 9/300\n","165/165 - 7s - loss: 1.8061 - digit1_loss: 0.3389 - digit2_loss: 0.4705 - digit3_loss: 0.5412 - digit4_loss: 0.4555 - digit1_accuracy: 0.8899 - digit2_accuracy: 0.8523 - digit3_accuracy: 0.8301 - digit4_accuracy: 0.8570 - val_loss: 0.8069 - val_digit1_loss: 0.1404 - val_digit2_loss: 0.2239 - val_digit3_loss: 0.2588 - val_digit4_loss: 0.1838 - val_digit1_accuracy: 0.9617 - val_digit2_accuracy: 0.9386 - val_digit3_accuracy: 0.9281 - val_digit4_accuracy: 0.9527\n","\n","Epoch 00009: val_digit4_accuracy improved from 0.89433 to 0.95267, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 10/300\n","165/165 - 7s - loss: 1.1496 - digit1_loss: 0.2066 - digit2_loss: 0.2984 - digit3_loss: 0.3622 - digit4_loss: 0.2824 - digit1_accuracy: 0.9370 - digit2_accuracy: 0.9098 - digit3_accuracy: 0.8903 - digit4_accuracy: 0.9150 - val_loss: 0.5252 - val_digit1_loss: 0.0884 - val_digit2_loss: 0.1423 - val_digit3_loss: 0.1762 - val_digit4_loss: 0.1184 - val_digit1_accuracy: 0.9757 - val_digit2_accuracy: 0.9568 - val_digit3_accuracy: 0.9490 - val_digit4_accuracy: 0.9694\n","\n","Epoch 00010: val_digit4_accuracy improved from 0.95267 to 0.96944, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 11/300\n","165/165 - 7s - loss: 0.8057 - digit1_loss: 0.1441 - digit2_loss: 0.2073 - digit3_loss: 0.2551 - digit4_loss: 0.1992 - digit1_accuracy: 0.9573 - digit2_accuracy: 0.9380 - digit3_accuracy: 0.9233 - digit4_accuracy: 0.9414 - val_loss: 0.4099 - val_digit1_loss: 0.0734 - val_digit2_loss: 0.1128 - val_digit3_loss: 0.1349 - val_digit4_loss: 0.0887 - val_digit1_accuracy: 0.9792 - val_digit2_accuracy: 0.9667 - val_digit3_accuracy: 0.9611 - val_digit4_accuracy: 0.9770\n","\n","Epoch 00011: val_digit4_accuracy improved from 0.96944 to 0.97700, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 12/300\n","165/165 - 7s - loss: 0.6252 - digit1_loss: 0.1105 - digit2_loss: 0.1660 - digit3_loss: 0.1995 - digit4_loss: 0.1491 - digit1_accuracy: 0.9673 - digit2_accuracy: 0.9510 - digit3_accuracy: 0.9413 - digit4_accuracy: 0.9584 - val_loss: 0.3777 - val_digit1_loss: 0.0647 - val_digit2_loss: 0.0994 - val_digit3_loss: 0.1310 - val_digit4_loss: 0.0826 - val_digit1_accuracy: 0.9816 - val_digit2_accuracy: 0.9696 - val_digit3_accuracy: 0.9634 - val_digit4_accuracy: 0.9778\n","\n","Epoch 00012: val_digit4_accuracy improved from 0.97700 to 0.97778, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 13/300\n","165/165 - 7s - loss: 0.5044 - digit1_loss: 0.0922 - digit2_loss: 0.1308 - digit3_loss: 0.1618 - digit4_loss: 0.1195 - digit1_accuracy: 0.9734 - digit2_accuracy: 0.9611 - digit3_accuracy: 0.9523 - digit4_accuracy: 0.9651 - val_loss: 0.3142 - val_digit1_loss: 0.0556 - val_digit2_loss: 0.0825 - val_digit3_loss: 0.1059 - val_digit4_loss: 0.0702 - val_digit1_accuracy: 0.9834 - val_digit2_accuracy: 0.9751 - val_digit3_accuracy: 0.9684 - val_digit4_accuracy: 0.9809\n","\n","Epoch 00013: val_digit4_accuracy improved from 0.97778 to 0.98089, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 14/300\n","165/165 - 7s - loss: 0.4299 - digit1_loss: 0.0743 - digit2_loss: 0.1097 - digit3_loss: 0.1400 - digit4_loss: 0.1058 - digit1_accuracy: 0.9775 - digit2_accuracy: 0.9677 - digit3_accuracy: 0.9568 - digit4_accuracy: 0.9707 - val_loss: 0.2768 - val_digit1_loss: 0.0497 - val_digit2_loss: 0.0743 - val_digit3_loss: 0.0881 - val_digit4_loss: 0.0647 - val_digit1_accuracy: 0.9844 - val_digit2_accuracy: 0.9786 - val_digit3_accuracy: 0.9743 - val_digit4_accuracy: 0.9816\n","\n","Epoch 00014: val_digit4_accuracy improved from 0.98089 to 0.98156, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 15/300\n","165/165 - 7s - loss: 0.3578 - digit1_loss: 0.0626 - digit2_loss: 0.0928 - digit3_loss: 0.1196 - digit4_loss: 0.0828 - digit1_accuracy: 0.9812 - digit2_accuracy: 0.9713 - digit3_accuracy: 0.9639 - digit4_accuracy: 0.9766 - val_loss: 0.2552 - val_digit1_loss: 0.0460 - val_digit2_loss: 0.0648 - val_digit3_loss: 0.0855 - val_digit4_loss: 0.0590 - val_digit1_accuracy: 0.9863 - val_digit2_accuracy: 0.9800 - val_digit3_accuracy: 0.9758 - val_digit4_accuracy: 0.9831\n","\n","Epoch 00015: val_digit4_accuracy improved from 0.98156 to 0.98311, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 16/300\n","165/165 - 7s - loss: 0.2996 - digit1_loss: 0.0536 - digit2_loss: 0.0752 - digit3_loss: 0.0995 - digit4_loss: 0.0712 - digit1_accuracy: 0.9840 - digit2_accuracy: 0.9778 - digit3_accuracy: 0.9690 - digit4_accuracy: 0.9782 - val_loss: 0.2429 - val_digit1_loss: 0.0463 - val_digit2_loss: 0.0663 - val_digit3_loss: 0.0737 - val_digit4_loss: 0.0566 - val_digit1_accuracy: 0.9858 - val_digit2_accuracy: 0.9807 - val_digit3_accuracy: 0.9783 - val_digit4_accuracy: 0.9842\n","\n","Epoch 00016: val_digit4_accuracy improved from 0.98311 to 0.98422, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 17/300\n","165/165 - 7s - loss: 0.2701 - digit1_loss: 0.0478 - digit2_loss: 0.0690 - digit3_loss: 0.0873 - digit4_loss: 0.0660 - digit1_accuracy: 0.9856 - digit2_accuracy: 0.9790 - digit3_accuracy: 0.9738 - digit4_accuracy: 0.9808 - val_loss: 0.2146 - val_digit1_loss: 0.0372 - val_digit2_loss: 0.0582 - val_digit3_loss: 0.0723 - val_digit4_loss: 0.0469 - val_digit1_accuracy: 0.9891 - val_digit2_accuracy: 0.9830 - val_digit3_accuracy: 0.9814 - val_digit4_accuracy: 0.9870\n","\n","Epoch 00017: val_digit4_accuracy improved from 0.98422 to 0.98700, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 18/300\n","165/165 - 7s - loss: 0.2285 - digit1_loss: 0.0412 - digit2_loss: 0.0572 - digit3_loss: 0.0714 - digit4_loss: 0.0587 - digit1_accuracy: 0.9883 - digit2_accuracy: 0.9819 - digit3_accuracy: 0.9780 - digit4_accuracy: 0.9831 - val_loss: 0.2203 - val_digit1_loss: 0.0434 - val_digit2_loss: 0.0602 - val_digit3_loss: 0.0666 - val_digit4_loss: 0.0501 - val_digit1_accuracy: 0.9868 - val_digit2_accuracy: 0.9828 - val_digit3_accuracy: 0.9813 - val_digit4_accuracy: 0.9867\n","\n","Epoch 00018: val_digit4_accuracy did not improve from 0.98700\n","Epoch 19/300\n","165/165 - 7s - loss: 0.1997 - digit1_loss: 0.0345 - digit2_loss: 0.0512 - digit3_loss: 0.0665 - digit4_loss: 0.0475 - digit1_accuracy: 0.9900 - digit2_accuracy: 0.9842 - digit3_accuracy: 0.9792 - digit4_accuracy: 0.9857 - val_loss: 0.2525 - val_digit1_loss: 0.0496 - val_digit2_loss: 0.0629 - val_digit3_loss: 0.0834 - val_digit4_loss: 0.0566 - val_digit1_accuracy: 0.9858 - val_digit2_accuracy: 0.9830 - val_digit3_accuracy: 0.9779 - val_digit4_accuracy: 0.9851\n","\n","Epoch 00019: val_digit4_accuracy did not improve from 0.98700\n","Epoch 20/300\n","165/165 - 7s - loss: 0.1781 - digit1_loss: 0.0299 - digit2_loss: 0.0479 - digit3_loss: 0.0603 - digit4_loss: 0.0400 - digit1_accuracy: 0.9916 - digit2_accuracy: 0.9851 - digit3_accuracy: 0.9806 - digit4_accuracy: 0.9881 - val_loss: 0.1810 - val_digit1_loss: 0.0321 - val_digit2_loss: 0.0482 - val_digit3_loss: 0.0606 - val_digit4_loss: 0.0400 - val_digit1_accuracy: 0.9892 - val_digit2_accuracy: 0.9860 - val_digit3_accuracy: 0.9831 - val_digit4_accuracy: 0.9884\n","\n","Epoch 00020: val_digit4_accuracy improved from 0.98700 to 0.98844, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 21/300\n","165/165 - 7s - loss: 0.1579 - digit1_loss: 0.0281 - digit2_loss: 0.0429 - digit3_loss: 0.0518 - digit4_loss: 0.0352 - digit1_accuracy: 0.9918 - digit2_accuracy: 0.9868 - digit3_accuracy: 0.9834 - digit4_accuracy: 0.9893 - val_loss: 0.1859 - val_digit1_loss: 0.0331 - val_digit2_loss: 0.0490 - val_digit3_loss: 0.0645 - val_digit4_loss: 0.0394 - val_digit1_accuracy: 0.9903 - val_digit2_accuracy: 0.9856 - val_digit3_accuracy: 0.9823 - val_digit4_accuracy: 0.9884\n","\n","Epoch 00021: val_digit4_accuracy did not improve from 0.98844\n","Epoch 22/300\n","165/165 - 7s - loss: 0.1456 - digit1_loss: 0.0254 - digit2_loss: 0.0369 - digit3_loss: 0.0466 - digit4_loss: 0.0368 - digit1_accuracy: 0.9921 - digit2_accuracy: 0.9885 - digit3_accuracy: 0.9854 - digit4_accuracy: 0.9892 - val_loss: 0.1887 - val_digit1_loss: 0.0345 - val_digit2_loss: 0.0508 - val_digit3_loss: 0.0606 - val_digit4_loss: 0.0428 - val_digit1_accuracy: 0.9900 - val_digit2_accuracy: 0.9848 - val_digit3_accuracy: 0.9833 - val_digit4_accuracy: 0.9880\n","\n","Epoch 00022: val_digit4_accuracy did not improve from 0.98844\n","Epoch 23/300\n","165/165 - 7s - loss: 0.1264 - digit1_loss: 0.0218 - digit2_loss: 0.0315 - digit3_loss: 0.0434 - digit4_loss: 0.0297 - digit1_accuracy: 0.9930 - digit2_accuracy: 0.9910 - digit3_accuracy: 0.9860 - digit4_accuracy: 0.9911 - val_loss: 0.1786 - val_digit1_loss: 0.0311 - val_digit2_loss: 0.0496 - val_digit3_loss: 0.0579 - val_digit4_loss: 0.0400 - val_digit1_accuracy: 0.9906 - val_digit2_accuracy: 0.9860 - val_digit3_accuracy: 0.9839 - val_digit4_accuracy: 0.9881\n","\n","Epoch 00023: val_digit4_accuracy did not improve from 0.98844\n","Epoch 24/300\n","165/165 - 7s - loss: 0.1110 - digit1_loss: 0.0197 - digit2_loss: 0.0289 - digit3_loss: 0.0353 - digit4_loss: 0.0271 - digit1_accuracy: 0.9935 - digit2_accuracy: 0.9907 - digit3_accuracy: 0.9885 - digit4_accuracy: 0.9912 - val_loss: 0.1778 - val_digit1_loss: 0.0290 - val_digit2_loss: 0.0486 - val_digit3_loss: 0.0591 - val_digit4_loss: 0.0410 - val_digit1_accuracy: 0.9902 - val_digit2_accuracy: 0.9866 - val_digit3_accuracy: 0.9837 - val_digit4_accuracy: 0.9886\n","\n","Epoch 00024: val_digit4_accuracy improved from 0.98844 to 0.98856, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 25/300\n","165/165 - 7s - loss: 0.1076 - digit1_loss: 0.0179 - digit2_loss: 0.0293 - digit3_loss: 0.0333 - digit4_loss: 0.0272 - digit1_accuracy: 0.9943 - digit2_accuracy: 0.9915 - digit3_accuracy: 0.9892 - digit4_accuracy: 0.9923 - val_loss: 0.1692 - val_digit1_loss: 0.0293 - val_digit2_loss: 0.0458 - val_digit3_loss: 0.0558 - val_digit4_loss: 0.0382 - val_digit1_accuracy: 0.9911 - val_digit2_accuracy: 0.9862 - val_digit3_accuracy: 0.9844 - val_digit4_accuracy: 0.9889\n","\n","Epoch 00025: val_digit4_accuracy improved from 0.98856 to 0.98889, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 26/300\n","165/165 - 7s - loss: 0.1005 - digit1_loss: 0.0165 - digit2_loss: 0.0254 - digit3_loss: 0.0371 - digit4_loss: 0.0216 - digit1_accuracy: 0.9943 - digit2_accuracy: 0.9921 - digit3_accuracy: 0.9882 - digit4_accuracy: 0.9936 - val_loss: 0.1810 - val_digit1_loss: 0.0343 - val_digit2_loss: 0.0465 - val_digit3_loss: 0.0612 - val_digit4_loss: 0.0390 - val_digit1_accuracy: 0.9893 - val_digit2_accuracy: 0.9868 - val_digit3_accuracy: 0.9842 - val_digit4_accuracy: 0.9891\n","\n","Epoch 00026: val_digit4_accuracy improved from 0.98889 to 0.98911, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 27/300\n","165/165 - 7s - loss: 0.0933 - digit1_loss: 0.0155 - digit2_loss: 0.0275 - digit3_loss: 0.0302 - digit4_loss: 0.0200 - digit1_accuracy: 0.9947 - digit2_accuracy: 0.9907 - digit3_accuracy: 0.9907 - digit4_accuracy: 0.9938 - val_loss: 0.1671 - val_digit1_loss: 0.0293 - val_digit2_loss: 0.0465 - val_digit3_loss: 0.0581 - val_digit4_loss: 0.0331 - val_digit1_accuracy: 0.9910 - val_digit2_accuracy: 0.9867 - val_digit3_accuracy: 0.9851 - val_digit4_accuracy: 0.9897\n","\n","Epoch 00027: val_digit4_accuracy improved from 0.98911 to 0.98967, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 28/300\n","165/165 - 7s - loss: 0.0755 - digit1_loss: 0.0142 - digit2_loss: 0.0185 - digit3_loss: 0.0257 - digit4_loss: 0.0172 - digit1_accuracy: 0.9957 - digit2_accuracy: 0.9941 - digit3_accuracy: 0.9918 - digit4_accuracy: 0.9948 - val_loss: 0.1535 - val_digit1_loss: 0.0250 - val_digit2_loss: 0.0441 - val_digit3_loss: 0.0536 - val_digit4_loss: 0.0308 - val_digit1_accuracy: 0.9923 - val_digit2_accuracy: 0.9871 - val_digit3_accuracy: 0.9866 - val_digit4_accuracy: 0.9913\n","\n","Epoch 00028: val_digit4_accuracy improved from 0.98967 to 0.99133, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 29/300\n","165/165 - 7s - loss: 0.0681 - digit1_loss: 0.0124 - digit2_loss: 0.0181 - digit3_loss: 0.0216 - digit4_loss: 0.0159 - digit1_accuracy: 0.9959 - digit2_accuracy: 0.9942 - digit3_accuracy: 0.9933 - digit4_accuracy: 0.9949 - val_loss: 0.1544 - val_digit1_loss: 0.0252 - val_digit2_loss: 0.0446 - val_digit3_loss: 0.0525 - val_digit4_loss: 0.0322 - val_digit1_accuracy: 0.9921 - val_digit2_accuracy: 0.9876 - val_digit3_accuracy: 0.9873 - val_digit4_accuracy: 0.9911\n","\n","Epoch 00029: val_digit4_accuracy did not improve from 0.99133\n","Epoch 30/300\n","165/165 - 7s - loss: 0.0663 - digit1_loss: 0.0111 - digit2_loss: 0.0175 - digit3_loss: 0.0231 - digit4_loss: 0.0145 - digit1_accuracy: 0.9964 - digit2_accuracy: 0.9945 - digit3_accuracy: 0.9922 - digit4_accuracy: 0.9953 - val_loss: 0.1632 - val_digit1_loss: 0.0291 - val_digit2_loss: 0.0467 - val_digit3_loss: 0.0570 - val_digit4_loss: 0.0305 - val_digit1_accuracy: 0.9926 - val_digit2_accuracy: 0.9881 - val_digit3_accuracy: 0.9864 - val_digit4_accuracy: 0.9917\n","\n","Epoch 00030: val_digit4_accuracy improved from 0.99133 to 0.99167, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 31/300\n","165/165 - 7s - loss: 0.0642 - digit1_loss: 0.0114 - digit2_loss: 0.0153 - digit3_loss: 0.0233 - digit4_loss: 0.0142 - digit1_accuracy: 0.9965 - digit2_accuracy: 0.9953 - digit3_accuracy: 0.9923 - digit4_accuracy: 0.9957 - val_loss: 0.1522 - val_digit1_loss: 0.0307 - val_digit2_loss: 0.0413 - val_digit3_loss: 0.0495 - val_digit4_loss: 0.0308 - val_digit1_accuracy: 0.9929 - val_digit2_accuracy: 0.9896 - val_digit3_accuracy: 0.9883 - val_digit4_accuracy: 0.9914\n","\n","Epoch 00031: val_digit4_accuracy did not improve from 0.99167\n","Epoch 32/300\n","165/165 - 7s - loss: 0.0504 - digit1_loss: 0.0073 - digit2_loss: 0.0138 - digit3_loss: 0.0171 - digit4_loss: 0.0122 - digit1_accuracy: 0.9976 - digit2_accuracy: 0.9950 - digit3_accuracy: 0.9944 - digit4_accuracy: 0.9957 - val_loss: 0.1434 - val_digit1_loss: 0.0263 - val_digit2_loss: 0.0423 - val_digit3_loss: 0.0468 - val_digit4_loss: 0.0280 - val_digit1_accuracy: 0.9930 - val_digit2_accuracy: 0.9892 - val_digit3_accuracy: 0.9890 - val_digit4_accuracy: 0.9929\n","\n","Epoch 00032: val_digit4_accuracy improved from 0.99167 to 0.99289, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 33/300\n","165/165 - 7s - loss: 0.0493 - digit1_loss: 0.0079 - digit2_loss: 0.0143 - digit3_loss: 0.0165 - digit4_loss: 0.0106 - digit1_accuracy: 0.9975 - digit2_accuracy: 0.9951 - digit3_accuracy: 0.9946 - digit4_accuracy: 0.9968 - val_loss: 0.1588 - val_digit1_loss: 0.0260 - val_digit2_loss: 0.0434 - val_digit3_loss: 0.0576 - val_digit4_loss: 0.0318 - val_digit1_accuracy: 0.9917 - val_digit2_accuracy: 0.9896 - val_digit3_accuracy: 0.9866 - val_digit4_accuracy: 0.9903\n","\n","Epoch 00033: val_digit4_accuracy did not improve from 0.99289\n","Epoch 34/300\n","165/165 - 7s - loss: 0.0477 - digit1_loss: 0.0077 - digit2_loss: 0.0122 - digit3_loss: 0.0156 - digit4_loss: 0.0122 - digit1_accuracy: 0.9974 - digit2_accuracy: 0.9960 - digit3_accuracy: 0.9948 - digit4_accuracy: 0.9958 - val_loss: 0.1547 - val_digit1_loss: 0.0273 - val_digit2_loss: 0.0458 - val_digit3_loss: 0.0514 - val_digit4_loss: 0.0302 - val_digit1_accuracy: 0.9927 - val_digit2_accuracy: 0.9887 - val_digit3_accuracy: 0.9877 - val_digit4_accuracy: 0.9928\n","\n","Epoch 00034: val_digit4_accuracy did not improve from 0.99289\n","Epoch 35/300\n","165/165 - 7s - loss: 0.0438 - digit1_loss: 0.0074 - digit2_loss: 0.0118 - digit3_loss: 0.0133 - digit4_loss: 0.0113 - digit1_accuracy: 0.9974 - digit2_accuracy: 0.9963 - digit3_accuracy: 0.9952 - digit4_accuracy: 0.9965 - val_loss: 0.1604 - val_digit1_loss: 0.0294 - val_digit2_loss: 0.0469 - val_digit3_loss: 0.0547 - val_digit4_loss: 0.0295 - val_digit1_accuracy: 0.9926 - val_digit2_accuracy: 0.9884 - val_digit3_accuracy: 0.9862 - val_digit4_accuracy: 0.9921\n","\n","Epoch 00035: val_digit4_accuracy did not improve from 0.99289\n","Epoch 36/300\n","165/165 - 7s - loss: 0.0425 - digit1_loss: 0.0066 - digit2_loss: 0.0101 - digit3_loss: 0.0160 - digit4_loss: 0.0100 - digit1_accuracy: 0.9977 - digit2_accuracy: 0.9968 - digit3_accuracy: 0.9945 - digit4_accuracy: 0.9971 - val_loss: 0.1542 - val_digit1_loss: 0.0263 - val_digit2_loss: 0.0456 - val_digit3_loss: 0.0518 - val_digit4_loss: 0.0305 - val_digit1_accuracy: 0.9927 - val_digit2_accuracy: 0.9894 - val_digit3_accuracy: 0.9874 - val_digit4_accuracy: 0.9922\n","\n","Epoch 00036: val_digit4_accuracy did not improve from 0.99289\n","Epoch 37/300\n","165/165 - 7s - loss: 0.0378 - digit1_loss: 0.0063 - digit2_loss: 0.0104 - digit3_loss: 0.0127 - digit4_loss: 0.0083 - digit1_accuracy: 0.9982 - digit2_accuracy: 0.9968 - digit3_accuracy: 0.9960 - digit4_accuracy: 0.9970 - val_loss: 0.1599 - val_digit1_loss: 0.0275 - val_digit2_loss: 0.0459 - val_digit3_loss: 0.0530 - val_digit4_loss: 0.0336 - val_digit1_accuracy: 0.9922 - val_digit2_accuracy: 0.9890 - val_digit3_accuracy: 0.9871 - val_digit4_accuracy: 0.9917\n","\n","Epoch 00037: val_digit4_accuracy did not improve from 0.99289\n","Epoch 38/300\n","165/165 - 7s - loss: 0.0307 - digit1_loss: 0.0048 - digit2_loss: 0.0083 - digit3_loss: 0.0104 - digit4_loss: 0.0073 - digit1_accuracy: 0.9987 - digit2_accuracy: 0.9977 - digit3_accuracy: 0.9968 - digit4_accuracy: 0.9981 - val_loss: 0.1503 - val_digit1_loss: 0.0258 - val_digit2_loss: 0.0453 - val_digit3_loss: 0.0522 - val_digit4_loss: 0.0269 - val_digit1_accuracy: 0.9921 - val_digit2_accuracy: 0.9881 - val_digit3_accuracy: 0.9877 - val_digit4_accuracy: 0.9932\n","\n","Epoch 00038: val_digit4_accuracy improved from 0.99289 to 0.99322, saving model to /content/drive/MyDrive/ProJ_Proofnum/image_weights_best.hdf5\n","Epoch 39/300\n","165/165 - 7s - loss: 0.0370 - digit1_loss: 0.0074 - digit2_loss: 0.0097 - digit3_loss: 0.0121 - digit4_loss: 0.0077 - digit1_accuracy: 0.9975 - digit2_accuracy: 0.9971 - digit3_accuracy: 0.9960 - digit4_accuracy: 0.9974 - val_loss: 0.1707 - val_digit1_loss: 0.0304 - val_digit2_loss: 0.0484 - val_digit3_loss: 0.0567 - val_digit4_loss: 0.0352 - val_digit1_accuracy: 0.9922 - val_digit2_accuracy: 0.9879 - val_digit3_accuracy: 0.9867 - val_digit4_accuracy: 0.9917\n","\n","Epoch 00039: val_digit4_accuracy did not improve from 0.99322\n","Epoch 40/300\n","165/165 - 7s - loss: 0.0338 - digit1_loss: 0.0058 - digit2_loss: 0.0098 - digit3_loss: 0.0112 - digit4_loss: 0.0069 - digit1_accuracy: 0.9982 - digit2_accuracy: 0.9970 - digit3_accuracy: 0.9960 - digit4_accuracy: 0.9981 - val_loss: 0.1442 - val_digit1_loss: 0.0257 - val_digit2_loss: 0.0415 - val_digit3_loss: 0.0494 - val_digit4_loss: 0.0276 - val_digit1_accuracy: 0.9929 - val_digit2_accuracy: 0.9898 - val_digit3_accuracy: 0.9886 - val_digit4_accuracy: 0.9927\n","\n","Epoch 00040: val_digit4_accuracy did not improve from 0.99322\n","Epoch 41/300\n","165/165 - 7s - loss: 0.0335 - digit1_loss: 0.0057 - digit2_loss: 0.0087 - digit3_loss: 0.0117 - digit4_loss: 0.0074 - digit1_accuracy: 0.9981 - digit2_accuracy: 0.9971 - digit3_accuracy: 0.9965 - digit4_accuracy: 0.9975 - val_loss: 0.1477 - val_digit1_loss: 0.0257 - val_digit2_loss: 0.0429 - val_digit3_loss: 0.0510 - val_digit4_loss: 0.0281 - val_digit1_accuracy: 0.9929 - val_digit2_accuracy: 0.9889 - val_digit3_accuracy: 0.9878 - val_digit4_accuracy: 0.9922\n","\n","Epoch 00041: val_digit4_accuracy did not improve from 0.99322\n","Epoch 42/300\n","165/165 - 7s - loss: 0.0273 - digit1_loss: 0.0040 - digit2_loss: 0.0067 - digit3_loss: 0.0109 - digit4_loss: 0.0058 - digit1_accuracy: 0.9988 - digit2_accuracy: 0.9978 - digit3_accuracy: 0.9966 - digit4_accuracy: 0.9983 - val_loss: 0.1696 - val_digit1_loss: 0.0313 - val_digit2_loss: 0.0472 - val_digit3_loss: 0.0557 - val_digit4_loss: 0.0354 - val_digit1_accuracy: 0.9922 - val_digit2_accuracy: 0.9886 - val_digit3_accuracy: 0.9874 - val_digit4_accuracy: 0.9911\n","\n","Epoch 00042: val_digit4_accuracy did not improve from 0.99322\n","Epoch 43/300\n","165/165 - 7s - loss: 0.0267 - digit1_loss: 0.0046 - digit2_loss: 0.0057 - digit3_loss: 0.0095 - digit4_loss: 0.0069 - digit1_accuracy: 0.9983 - digit2_accuracy: 0.9982 - digit3_accuracy: 0.9970 - digit4_accuracy: 0.9980 - val_loss: 0.1472 - val_digit1_loss: 0.0276 - val_digit2_loss: 0.0413 - val_digit3_loss: 0.0473 - val_digit4_loss: 0.0310 - val_digit1_accuracy: 0.9927 - val_digit2_accuracy: 0.9893 - val_digit3_accuracy: 0.9891 - val_digit4_accuracy: 0.9920\n","\n","Epoch 00043: val_digit4_accuracy did not improve from 0.99322\n","Epoch 44/300\n","165/165 - 7s - loss: 0.0264 - digit1_loss: 0.0049 - digit2_loss: 0.0064 - digit3_loss: 0.0087 - digit4_loss: 0.0063 - digit1_accuracy: 0.9981 - digit2_accuracy: 0.9980 - digit3_accuracy: 0.9970 - digit4_accuracy: 0.9979 - val_loss: 0.1685 - val_digit1_loss: 0.0329 - val_digit2_loss: 0.0457 - val_digit3_loss: 0.0575 - val_digit4_loss: 0.0324 - val_digit1_accuracy: 0.9926 - val_digit2_accuracy: 0.9887 - val_digit3_accuracy: 0.9877 - val_digit4_accuracy: 0.9923\n","\n","Epoch 00044: val_digit4_accuracy did not improve from 0.99322\n","Epoch 45/300\n","165/165 - 7s - loss: 0.0276 - digit1_loss: 0.0051 - digit2_loss: 0.0065 - digit3_loss: 0.0098 - digit4_loss: 0.0063 - digit1_accuracy: 0.9983 - digit2_accuracy: 0.9978 - digit3_accuracy: 0.9971 - digit4_accuracy: 0.9983 - val_loss: 0.1528 - val_digit1_loss: 0.0267 - val_digit2_loss: 0.0441 - val_digit3_loss: 0.0507 - val_digit4_loss: 0.0313 - val_digit1_accuracy: 0.9927 - val_digit2_accuracy: 0.9891 - val_digit3_accuracy: 0.9878 - val_digit4_accuracy: 0.9923\n","\n","Epoch 00045: val_digit4_accuracy did not improve from 0.99322\n","Epoch 46/300\n","165/165 - 7s - loss: 0.0244 - digit1_loss: 0.0037 - digit2_loss: 0.0065 - digit3_loss: 0.0084 - digit4_loss: 0.0059 - digit1_accuracy: 0.9988 - digit2_accuracy: 0.9978 - digit3_accuracy: 0.9972 - digit4_accuracy: 0.9979 - val_loss: 0.1562 - val_digit1_loss: 0.0285 - val_digit2_loss: 0.0440 - val_digit3_loss: 0.0530 - val_digit4_loss: 0.0307 - val_digit1_accuracy: 0.9923 - val_digit2_accuracy: 0.9893 - val_digit3_accuracy: 0.9889 - val_digit4_accuracy: 0.9919\n","\n","Epoch 00046: val_digit4_accuracy did not improve from 0.99322\n","Epoch 47/300\n","165/165 - 7s - loss: 0.0238 - digit1_loss: 0.0040 - digit2_loss: 0.0064 - digit3_loss: 0.0083 - digit4_loss: 0.0051 - digit1_accuracy: 0.9987 - digit2_accuracy: 0.9977 - digit3_accuracy: 0.9975 - digit4_accuracy: 0.9985 - val_loss: 0.1460 - val_digit1_loss: 0.0247 - val_digit2_loss: 0.0410 - val_digit3_loss: 0.0500 - val_digit4_loss: 0.0303 - val_digit1_accuracy: 0.9933 - val_digit2_accuracy: 0.9890 - val_digit3_accuracy: 0.9886 - val_digit4_accuracy: 0.9919\n","\n","Epoch 00047: val_digit4_accuracy did not improve from 0.99322\n","Epoch 48/300\n","165/165 - 7s - loss: 0.0232 - digit1_loss: 0.0035 - digit2_loss: 0.0069 - digit3_loss: 0.0084 - digit4_loss: 0.0045 - digit1_accuracy: 0.9988 - digit2_accuracy: 0.9980 - digit3_accuracy: 0.9972 - digit4_accuracy: 0.9987 - val_loss: 0.1395 - val_digit1_loss: 0.0243 - val_digit2_loss: 0.0421 - val_digit3_loss: 0.0471 - val_digit4_loss: 0.0259 - val_digit1_accuracy: 0.9931 - val_digit2_accuracy: 0.9890 - val_digit3_accuracy: 0.9893 - val_digit4_accuracy: 0.9929\n","\n","Epoch 00048: val_digit4_accuracy did not improve from 0.99322\n","Epoch 49/300\n","165/165 - 7s - loss: 0.0212 - digit1_loss: 0.0037 - digit2_loss: 0.0060 - digit3_loss: 0.0079 - digit4_loss: 0.0036 - digit1_accuracy: 0.9988 - digit2_accuracy: 0.9982 - digit3_accuracy: 0.9977 - digit4_accuracy: 0.9990 - val_loss: 0.1530 - val_digit1_loss: 0.0275 - val_digit2_loss: 0.0444 - val_digit3_loss: 0.0517 - val_digit4_loss: 0.0293 - val_digit1_accuracy: 0.9931 - val_digit2_accuracy: 0.9886 - val_digit3_accuracy: 0.9882 - val_digit4_accuracy: 0.9927\n","\n","Epoch 00049: val_digit4_accuracy did not improve from 0.99322\n","Epoch 50/300\n","165/165 - 7s - loss: 0.0206 - digit1_loss: 0.0026 - digit2_loss: 0.0062 - digit3_loss: 0.0068 - digit4_loss: 0.0050 - digit1_accuracy: 0.9993 - digit2_accuracy: 0.9981 - digit3_accuracy: 0.9976 - digit4_accuracy: 0.9982 - val_loss: 0.1426 - val_digit1_loss: 0.0249 - val_digit2_loss: 0.0439 - val_digit3_loss: 0.0482 - val_digit4_loss: 0.0255 - val_digit1_accuracy: 0.9932 - val_digit2_accuracy: 0.9890 - val_digit3_accuracy: 0.9901 - val_digit4_accuracy: 0.9932\n","\n","Epoch 00050: val_digit4_accuracy did not improve from 0.99322\n","Epoch 00050: early stopping\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"mgsGkeMScql5","executionInfo":{"status":"ok","timestamp":1610641953148,"user_tz":-480,"elapsed":698715,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}}},"source":[""],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"id":"potIGCgbcq0G","executionInfo":{"status":"ok","timestamp":1610641953150,"user_tz":-480,"elapsed":698711,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}}},"source":[""],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"id":"5od3Zy78cq3L","executionInfo":{"status":"ok","timestamp":1610641953152,"user_tz":-480,"elapsed":698707,"user":{"displayName":"北科大-謝宗翰","photoUrl":"","userId":"04406997407027209794"}}},"source":[""],"execution_count":16,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1Sd-faxEKTRk"},"source":[""]}]}